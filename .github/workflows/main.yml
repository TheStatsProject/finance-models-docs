name: Deploy MkDocs

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements.txt'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo, preserving the GITHUB_TOKEN for authenticated pushes
      - uses: actions/checkout@v4
        with:
          persist-credentials: true    # keep GITHUB_TOKEN in local git config
          fetch-depth: 0               # full history (needed for versioning with mike)

      # 2. Lint MkDocs configuration to catch errors early
      - name: Lint MkDocs config
        run: mkdocs serve --config-file mkdocs.yml --strict

      # 3. Cache pip downloads to speed up installs
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip           # cache pipâ€™s download cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '^3.9'        # use Python 3.9 and above for compatibility testing

      # 5. Install all dependencies from requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
        # includes mkdocs-material, mkdocs-blog, mkdocs-git-revision-date-localized, mkdocs-tags, mike

      # 6. Build the MkDocs site into a clean "site/" directory
      - name: Build MkDocs site
        run: mkdocs build --site-dir site
        # separates source from built output

      # 7. Deploy to GitHub Pages via peaceiris/actions-gh-pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site        # publish the site folder to gh-pages
          # (Optional) Add your custom domain:
          # cname: finance.example.com

      # 8. Notify on deployment success or failure (Optional)
      - name: Notify on Deployment
        if: failure() || success()
        run: |
          echo "The deployment was successful!" || echo "The deployment failed!"
